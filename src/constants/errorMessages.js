module.exports = {
  USER_NOT_FOUND: 'User not found',
  MISSING_USER_ID: 'Missing user ID',
  INVALID_INPUT: 'Invalid input data',
  PRODUCT_NOT_FOUND: 'Product not found',
  PURCHASE_NOT_FOUND: 'Purchase not found',
  PURCHASES_FETCH_FAILED: 'Failed to retrieve purchases',
  USERNAME_TAKEN: 'Username already taken',
  INVALID_CREDENTIALS: 'Invalid credentials',
  UNAUTHORIZED: 'Unauthorized',
  INVALID_TOKEN: 'Invalid token',
  FORBIDDEN: 'Forbidden',
  MISSING_REFRESH_TOKEN: 'Missing refresh token',
  INVALID_TOKEN_TYPE: 'Invalid token type',
  JSON_WEB_TOKEN_ERROR: 'JsonWebTokenError',
  TOKEN_EXPIRED_ERROR: 'TokenExpiredError',
  MALFORMED_TOKEN: 'Malformed token',
  LOCKER_NOT_FOUND: 'Locker not found',
  UNKNOWN_ERROR: 'An unknown error occurred',
  AVAILABLE_LOCKER_NOT_FOUND: 'Available locker not found',
  LOCKER_CREATION_FAILED: 'Locker creation failed for product ID',
  ERROR_DELETING_LOCKERS_BY_PRODUCT_ID: 'Error deleting lockers by product ID:',
  ERROR_DELETING_AVAILABLE_LOCKERS_BY_PRODUCT_ID:
    'Error deleting Available lockers by product ID:',
  EMAIL_EXISTS: 'Email already exists',
  FAILED_TO_FETCH_PRODUCTS: 'Failed to fetch products:',
  PRODUCT_ALREADY_RESERVED: 'Product was just reserved by another user.',
  FAILED_TO_ADD_TO_CART: 'Failed to add to cart',
  FAILED_TO_FETCH_CART: 'Failed to fetch cart',
  NOT_YOUR_CART_ITEM: 'Not your cart item',
  FAILED_TO_UPDATE_PRODUCTS: 'Failed to update product',
  FAILED_TO_REMOVE_FROM_CART: 'Failed to remove from cart',
  MISSING_OWNER_ID: 'Missing owner ID',
  ERROR_IN_AVAILABLE_LOCKER_BY_PRODUCTID:
    'Error in availableLockersByProductId:',
  FAILED_TO_FETCH_AVAILABLE_LOCKERS: 'Failed to fetch available lockers',
  ERROR_FETCHING_FREE_LOCKERS: 'Error fetching free lockers:',
  FAILED_TO_FETCH_FREE_LOCKERS: 'Failed to fetch free lockers',
  RELATED_AVAILABLE_LOCKERS_IS_NOT_AN_ARRAY:
    'relatedAvailableLockers is not an array!',
  MISSING_PRODUCTID_IN_LOCKER: 'Missing productId in locker:',
  MONGOOSE_ERROR: 'Mongoose error:',
  MISSING_BUYER_ID:'Missing buyerId',

  LOG_WARNINGS: {
    NO_AVAILABLE_LOCKERS_FOR_PRODUCT: (productId) =>
      `No available lockers found for product ${productId}`,
  },
};
