openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API for managing users (create, read, update, delete)

servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /api/v1/users:
    get:
      summary: Get all users
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        201:
          description: User created successfully
        400:
          description: Invalid input

  /api/v1/users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found

    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        200:
          description: User updated successfully
        400:
          description: Invalid input
        404:
          description: User not found

    delete:
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        204:
          description: User deleted successfully
        404:
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "6635e957a6a5fc1e6fbf9d1a"
        name:
          type: string
          example: "Jane Smith"
        email:
          type: string
          example: "jane.smith@example.com"
        username:
          type: string
          example: "janesmith"
        role:
          type: string
          enum: [user, admin]
          example: "user"
        rank:
          type: integer
          example: 7
        review:
          type: string
          example: "Excellent contributor"
        isVerified:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: "2025-04-01T12:34:56.789Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-04-05T09:00:00.000Z"

    UserInput:
      type: object
      required:
        - name
        - email
        - username
        - password
      properties:
        name:
          type: string
          example: "Jane Smith"
        email:
          type: string
          example: "jane.smith@example.com"
        username:
          type: string
          example: "janesmith"
        password:
          type: string
          example: "securepassword123"
        role:
          type: string
          enum: [user, admin]
          example: "user"
        rank:
          type: integer
          example: 7
        review:
          type: string
          example: "Excellent contributor"
        isVerified:
          type: boolean
          example: false
